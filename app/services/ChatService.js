const db = require("../database/db");
const Chat = db.Chat;
const User = db.User;
const ChatMessage = db.ChatMessage;

class ChatService {

    async get(userId) {
        const user = await User.findByPk(userId);
        return user.getChats({joinTableAttributes: []}); // generated by sequelize
    }

    async getMessages(chatId) {
        const chat = await Chat.findByPk(chatId);
        return chat == null ? [] : chat.getChatMessages(); // generated by sequelize
    }

    async create(currentUserId, guestId) {
        const transaction = await Chat.sequelize.transaction();
        try {
            const chat = await Chat.create({}, {transaction});
            const user = await User.findByPk(currentUserId, {transaction});
            const guest = await User.findByPk(guestId, {transaction});

            if (user && guest) {
                await chat.addUsers([user, guest], {transaction});
                await transaction.commit();
                return chat;
            } else {
                await transaction.rollback();
            }
        } catch (e) {
            await transaction.rollback();
        }
        return null;
    }

    async createMessage(message) {
        const user = await User.findByPk(message.userId);
        const chat = await Chat.findByPk(message.chatId);

        if (user && chat) {
            return ChatMessage.create(message);
        } else {
            return null;
        }
    }

    async delete(id) {
        const deleted = await Chat.destroy({where: {id}});
        return !!deleted;
    }


}

module.exports = ChatService;